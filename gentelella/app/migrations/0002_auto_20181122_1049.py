# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-11-22 02:49
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('subjectid', models.IntegerField(blank=True, db_column='subjectId', null=True)),
                ('pharseid', models.IntegerField(blank=True, db_column='pharseId', null=True)),
                ('gradeid', models.IntegerField(blank=True, db_column='gradeId', null=True)),
                ('editionid', models.IntegerField(blank=True, db_column='editionId', null=True)),
                ('chapter', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('section', models.CharField(blank=True, max_length=255, null=True)),
                ('knowledgeid', models.IntegerField(blank=True, db_column='knowledgeId', null=True)),
                ('chapterorder', models.IntegerField(blank=True, db_column='chapterOrder', null=True)),
                ('unitorder', models.IntegerField(blank=True, db_column='unitOrder', null=True)),
                ('sectionorder', models.IntegerField(blank=True, db_column='sectionOrder', null=True)),
            ],
            options={
                'db_table': 'chapter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBasic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledgename', models.CharField(blank=True, db_column='knowledgeName', max_length=200, null=True)),
                ('subjectid', models.IntegerField(blank=True, db_column='subjectId', null=True)),
                ('pharseid', models.IntegerField(blank=True, db_column='pharseId', null=True)),
                ('key', models.CharField(blank=True, max_length=500, null=True)),
                ('descs', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowledge_basic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KnowledgeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectid', models.IntegerField(blank=True, db_column='subjectId', null=True)),
                ('pharseid', models.IntegerField(blank=True, db_column='pharseId', null=True)),
                ('knowledge_level_1', models.IntegerField(blank=True, null=True)),
                ('knowledge_level_2', models.IntegerField(blank=True, null=True)),
                ('knowledge_level_3', models.IntegerField(blank=True, null=True)),
                ('knowledgeid', models.IntegerField(blank=True, db_column='knowledgeId', null=True)),
                ('level1', models.CharField(blank=True, max_length=100, null=True)),
                ('level2', models.CharField(blank=True, max_length=100, null=True)),
                ('level3', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'knowledge_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pharsegrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pharseid', models.IntegerField(blank=True, db_column='pharseId', null=True)),
                ('gradeid', models.CharField(blank=True, db_column='gradeId', max_length=255, null=True)),
            ],
            options={
                'db_table': 'pharsegrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionKnowledgeBasicId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_basic_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'question_knowledge_basic_id',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('option_a', models.TextField(blank=True, null=True)),
                ('option_b', models.TextField(blank=True, null=True)),
                ('option_c', models.TextField(blank=True, null=True)),
                ('option_d', models.TextField(blank=True, null=True)),
                ('option_e', models.TextField(blank=True, null=True)),
                ('answer1', models.TextField(blank=True, null=True)),
                ('answer2', models.TextField(blank=True, null=True)),
                ('parse', models.TextField(blank=True, null=True)),
                ('qtpye', models.CharField(blank=True, max_length=80, null=True)),
                ('diff', models.FloatField(blank=True, null=True)),
                ('md5', models.CharField(blank=True, max_length=50, null=True)),
                ('subjectid', models.IntegerField(blank=True, db_column='subjectId', null=True)),
                ('gradeid', models.IntegerField(blank=True, db_column='gradeId', null=True)),
                ('knowledges', models.CharField(blank=True, max_length=200, null=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('papertpye', models.CharField(blank=True, db_column='paperTpye', max_length=50, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('fromsite', models.CharField(blank=True, db_column='fromSite', max_length=50, null=True)),
                ('issub', models.IntegerField(blank=True, db_column='isSub', null=True)),
                ('isnormal', models.IntegerField(blank=True, db_column='isNormal', null=True)),
                ('iskonw', models.IntegerField(blank=True, db_column='isKonw', null=True)),
                ('tiid', models.CharField(blank=True, max_length=50, null=True)),
                ('similarity', models.IntegerField(blank=True, db_column='Similarity', null=True)),
                ('isunique', models.IntegerField(blank=True, null=True)),
                ('md52', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'questions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subquestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('option_a', models.TextField(blank=True, null=True)),
                ('option_b', models.TextField(blank=True, null=True)),
                ('option_c', models.TextField(blank=True, null=True)),
                ('option_d', models.TextField(blank=True, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('answer1', models.TextField(blank=True, null=True)),
                ('answer2', models.TextField(blank=True, null=True)),
                ('parse', models.TextField(blank=True, null=True)),
                ('qtpye', models.CharField(blank=True, max_length=80, null=True)),
                ('diff', models.FloatField(blank=True, null=True)),
                ('subjectid', models.IntegerField(blank=True, db_column='subjectId', null=True)),
                ('gradeid', models.IntegerField(blank=True, db_column='gradeId', null=True)),
                ('knowledges', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('tiid', models.CharField(blank=True, max_length=50, null=True)),
                ('ptiid', models.CharField(blank=True, max_length=50, null=True)),
                ('fromsite', models.IntegerField(blank=True, null=True)),
                ('answer_json', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subquestion',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='knowledge_basic',
            name='pharseId',
        ),
        migrations.RemoveField(
            model_name='knowledge_basic',
            name='subjectId',
        ),
        migrations.AlterModelOptions(
            name='edition',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='grade',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='pharse',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='subject',
            options={'managed': False},
        ),
        migrations.DeleteModel(
            name='knowledge_basic',
        ),
    ]
